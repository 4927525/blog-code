<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Hzbskak&#39;s Blog</title>
    <link>/categories/docker/</link>
    <description>Recent content in docker on Hzbskak&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Dec 2021 11:09:08 +0800</lastBuildDate><atom:link href="/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker 集群中 nginx 配置 php 需要注意的地方</title>
      <link>/post/nginx/docker-%E9%9B%86%E7%BE%A4%E4%B8%AD-nginx-%E9%85%8D%E7%BD%AE-php-%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</link>
      <pubDate>Fri, 17 Dec 2021 11:09:08 +0800</pubDate>
      
      <guid>/post/nginx/docker-%E9%9B%86%E7%BE%A4%E4%B8%AD-nginx-%E9%85%8D%E7%BD%AE-php-%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</guid>
      
        <description>序 最近docker部署集群的时候遇到了一个问题。于是就踩坑了&amp;hellip;
问题复现 那就是php和nginx不在同一个容器，却要通过nginx配置的server_name和listen来访问php项目。
之前在本地集成环境部署的时候没有考虑过这个问题，是因为只要nginx的root根目录和php的root根目录指向同一个目录，这样把项目文件放到这个目录下就可同时访问，也就不存在说是php来访问还是nginx来访问的说法。
但是在集群中也就需要考虑这个问题了。
思路 静态文件需要在 nginx 容器内，php代码放在 php-fpm 的容器内，在nginx的配置里 php 部分设置php-fpm 所在容器内php的路径就可以了。</description>
      
    </item>
    
    <item>
      <title>docker swarm 搭建与服务更新</title>
      <link>/post/docker/docker-swarm-%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%9C%8D%E5%8A%A1%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Wed, 15 Dec 2021 17:54:53 +0800</pubDate>
      
      <guid>/post/docker/docker-swarm-%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%9C%8D%E5%8A%A1%E6%9B%B4%E6%96%B0/</guid>
      
        <description>序 研究了好久的docker集群部署终于是在本地服务器跑通了。于是趁着热乎赶紧码下来。 1. 创建集群 docker swarm init --advertise-addr 192.168.101.67 将本机ip 作为默认leader节点创建。</description>
      
    </item>
    
    <item>
      <title>Dockerfile文件docker build制作镜像时,出现pecl not found</title>
      <link>/post/docker/dockerfile%E6%96%87%E4%BB%B6docker-build%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E6%97%B6%E5%87%BA%E7%8E%B0pecl-not-found/</link>
      <pubDate>Tue, 14 Dec 2021 09:49:43 +0800</pubDate>
      
      <guid>/post/docker/dockerfile%E6%96%87%E4%BB%B6docker-build%E5%88%B6%E4%BD%9C%E9%95%9C%E5%83%8F%E6%97%B6%E5%87%BA%E7%8E%B0pecl-not-found/</guid>
      
        <description>问题复现： 官方给出的扩展安装地址https://github.com/hyperf/hyperf-docker
RUN apk add --no-cache librdkafka-dev \ &amp;amp;&amp;amp; pecl install rdkafka \ &amp;amp;&amp;amp; echo &amp;#34;extension=rdkafka.</description>
      
    </item>
    
    <item>
      <title>Docker学习笔记</title>
      <link>/post/docker/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Dec 2021 17:12:42 +0800</pubDate>
      
      <guid>/post/docker/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      
        <description>Docker安装 使用官方安装脚本自动安装 安装命令如下：
curl -fsSL https://get.docker.com | bash -s docker --mirror aliyun 也可以使用国内 daocloud 一键安装命令：</description>
      
    </item>
    
    <item>
      <title>docker从零部署项目包括不间断线上更新</title>
      <link>/post/docker/docker%E4%BB%8E%E9%9B%B6%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8C%85%E6%8B%AC%E4%B8%8D%E9%97%B4%E6%96%AD%E7%BA%BF%E4%B8%8A%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Mon, 13 Dec 2021 14:15:56 +0800</pubDate>
      
      <guid>/post/docker/docker%E4%BB%8E%E9%9B%B6%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%8C%85%E6%8B%AC%E4%B8%8D%E9%97%B4%E6%96%AD%E7%BA%BF%E4%B8%8A%E6%9B%B4%E6%96%B0/</guid>
      
        <description>序 记录自己用Docker从零搭建项目部署到服务器和使用红黑部署来保证程序不中断更新的心得和经验。
 对Docker还不熟悉的小伙伴可以看下这篇文章
 1. 编写项目微服务 这是前提工作，必须确保项目是可以运行的。
2. 创建网络 这是容器通信的基础</description>
      
    </item>
    
  </channel>
</rss>